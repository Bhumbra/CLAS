//------------------------------------------------------------------------------
// Single-threaded mmdot matrix-matrix dot product class
//------------------------------------------------------------------------------
# ifndef tmmdot.txx
# define tmmdot.txx

// A possible vmdot read cache scheme (for thread-safety do not cache Out):
// Fast: In0 (8x64x2)    , In1T (64x8)       - 12288
// Slow: In0 ([_8x8x64x2), In1T (64x[8x_8]) - 98304
// Shared: In1
//
// Double length:	pre-aligned  12320 
//								post-aligned 12288

//------------------------------------------------------------------------------
# include "replicator.txx"
# include "cacher.txx"

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
template <class T, U>
class tmmdot: {
	public:
		tmmdot();
		~tmmdot<T, U>();
	protected:
		init();
	private:
};

//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
template <class T, U>
tmmdot<T, U>::tmmdot() {
	this -> init();
}

//---------------------------------------------------------------------------
template <class T, U>
tmmdot<T, U>::~tmmdot() {
	this -> init();
}

//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
template <class T, U>
void tmmdot<T, U>::init() {
}

//---------------------------------------------------------------------------
//---------------------------------------------------------------------------

# endif

